# Epic 2 Enhanced RAG Configuration - Proper ModularUnifiedRetriever with Epic 2 Features
# This configuration uses ModularUnifiedRetriever with Epic 2 sub-components

# Document processor for handling input files
document_processor:
  type: "hybrid_pdf"
  config:
    chunk_size: 1024
    chunk_overlap: 128

# Embedding generator for converting text to vectors  
embedder:
  type: "modular"
  config:
    model:
      type: "sentence_transformer"
      config:
        model_name: "sentence-transformers/multi-qa-MiniLM-L6-cos-v1"
        device: "auto"
        normalize_embeddings: true
    batch_processor:
      type: "dynamic"
      config:
        initial_batch_size: 64
        max_batch_size: 256
        optimize_for_memory: false
    cache:
      type: "memory"
      config:
        max_entries: 100000
        max_memory_mb: 1024

# Epic 2 ModularUnifiedRetriever with Enhanced Sub-components
retriever:
  type: "modular_unified"  # Use ModularUnifiedRetriever
  config:
    # Composite filtering configuration (NEW - replaces semantic gap detection)
    composite_filtering:
      enabled: true
      fusion_weight: 0.7          # α - weight for fusion score importance
      semantic_weight: 0.3        # β - weight for semantic similarity
      min_composite_score: 0.4    # threshold for document inclusion
      max_candidates: 15          # reduce from k*2 to k*1.5 for efficiency
    
    # Legacy semantic gap detection (DEPRECATED - use composite_filtering)
    min_semantic_alignment: 0.3  # Minimum query-document semantic similarity
    
    vector_index:
      type: "faiss"
      config:
        index_type: "IndexFlatIP"
        normalize_embeddings: true
        metric: "cosine"
    
    sparse:
      type: "bm25"
      config:
        k1: 1.2
        b: 0.75
        lowercase: true
        preserve_technical_terms: true
        filter_stop_words: true  # Enable stop word filtering
        custom_stop_words: []    # Additional stop words if needed
        min_score: 0.1          # Minimum normalized score threshold
    
    # Score-Aware Fusion (preserves semantic relevance)
    fusion:
      type: "score_aware"  # Use ScoreAwareFusion 
      config:
        score_weight: 0.9      # α - semantic score importance (very high)
        rank_weight: 0.1       # β - rank stability factor (minimal)
        overlap_weight: 0.0    # γ - both-retriever bonus (disabled)
        normalize_scores: false # Score normalization disabled
        k: 60                  # RRF constant for rank component
    
    # Epic 2 Feature: Neural Reranking
    reranker:
      type: "neural"  # Use NeuralReranker for Epic 2
      config:
        enabled: true
        model_name: "cross-encoder/ms-marco-MiniLM-L6-v2"
        device: "auto"
        batch_size: 32
        max_length: 512
        max_candidates: 100
        models:
          default_model:
            name: "cross-encoder/ms-marco-MiniLM-L6-v2"
            device: "auto"
            batch_size: 32
            max_length: 512
        default_model: "default_model"

# Answer generation strategy
answer_generator:
  type: "adaptive_modular"
  config:
    llm_client:
      type: "mock"
      config:
        response_pattern: "technical"
        include_citations: true
        max_response_length: 1024
        mock_delay: 0.1
    temperature: 0.3
    max_tokens: 1024
    confidence_threshold: 0.85
    
    prompt_builder:
      type: "simple"
      config:
        max_context_length: 12000
        include_instructions: true
        citation_style: "inline"
        template: |
          You are an expert technical assistant specializing in RISC-V architecture and computer systems.
          
          Context Documents:
          {context}
          
          Question: {query}
          
          Instructions:
          - Provide a comprehensive, detailed technical answer based ONLY on the provided context
          - Include technical specifications, encoding details, and implementation information when available
          - Explain concepts step-by-step with technical depth appropriate for engineers
          - Cover related concepts and connections mentioned in the context
          - Include specific examples, instruction formats, or implementation details when present
          - Be thorough and detailed - technical documentation requires comprehensive coverage
          - If multiple aspects are mentioned in the context, address all of them
          - ALWAYS include citations using [Document X] format after every factual claim
          - Every technical specification, instruction format, or implementation detail must be cited
          - Use multiple citations when information comes from several sources: [Document 1, Document 2]
          
          Answer:
    
    confidence_scorer:
      type: "semantic"
      config:
        min_answer_length: 20
        max_answer_length: 1000
        relevance_weight: 0.4
        grounding_weight: 0.4
        quality_weight: 0.2
        low_retrieval_penalty: 0.3  # Penalty when few documents retrieved
        min_context_documents: 3    # Minimum documents for full confidence

# Global settings
global_settings:
  environment: "testing"
  log_level: "info"